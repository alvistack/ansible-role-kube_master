---
kind: InitConfiguration
apiVersion: kubeadm.k8s.io/v1beta1
localAPIEndpoint:
  advertiseAddress: {{ ansible_default_ipv4.address }}
nodeRegistration:
  name: {{ inventory_hostname }}
  criSocket: /var/run/dockershim.sock
  taints: []
---
kind: ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta1
clusterName: {{ kubernetes_cluster_name }}
etcd:
  external:
    endpoints:
{% for host in ansible_play_hosts %}
      - https://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:2379
{% endfor %}
    caFile: /etc/kubernetes/pki/etcd/ca.crt
    certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
    keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
networking:
  dnsDomain: {{ kubernetes_dns_domain }}
  podSubnet: {{ kubernetes_pod_subnet }}
  serviceSubnet: {{ kubernetes_service_subnet }}
kubernetesVersion: {{ kubernetes_version }}
controlPlaneEndpoint: ""
certificatesDir: /etc/kubernetes/pki
imageRepository: {{ kubernetes_image_repository }}
apiServer:
  extraArgs:
    authorization-mode: Node,RBAC
  timeoutForControlPlane: 4m0s
controllerManager: {}
scheduler: {}
dns:
  type: CoreDNS
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
failSwapOn: {{ kubelet_fail_swap_on | bool | lower }}
authentication:
  anonymous:
    enabled: false
  webhook:
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: Webhook
enforceNodeAllocatable:
  - pods
staticPodPath: {{ kubelet_static_pod_path }}
cgroupDriver: {{ kubelet_cgroup_driver }}
maxPods: {{ kubelet_max_pods }}
address: {{ kubelet_bind_address }}
clusterDomain: {{ kubernetes_dns_domain }}
{% if kubelet_system_reserved %}
systemReserved:
  {{ kubelet_system_reserved | to_nice_yaml | indent(2) }}
{%- endif %}
{% if kubelet_kube_reserved %}
kubeReserved:
  {{ kubelet_kube_reserved | to_nice_yaml | indent(2) }}
{%- endif %}
resolvConf: {{ kubelet_resolv_conf }}
---
kind: KubeProxyConfiguration
apiVersion: kubeproxy.config.k8s.io/v1alpha1
bindAddress: {{ kube_proxy_bind_address }}
clusterCIDR: {{ kubernetes_pod_subnet }}
iptables:
  masqueradeAll: {{ kube_proxy_masquerade_all | bool | lower }}
  masqueradeBit: {{ kube_proxy_masquerade_bit }}
mode: {{ kube_proxy_mode }}
