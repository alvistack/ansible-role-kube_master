---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ kube_apiserver_advertise_address }}
  bindPort: {{ kube_apiserver_bind_port }}
nodeRegistration:
  name: {{ ansible_hostname }}
  criSocket: {{ kubelet_container_runtime_endpoint }}
  taints: []
  kubeletExtraArgs:
    node-ip: {{ kubelet_node_ip }}
    runtime-cgroups: {{ kubelet_runtime_cgroups }}
    container-runtime: {{ kubelet_container_runtime }}
    container-runtime-endpoint: {{ kubelet_container_runtime_endpoint }}

---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
clusterName: {{ kubernetes_cluster_name }}
etcd:
  {{ kubernetes_etcd | to_nice_yaml(2) | indent(2) }}
networking:
  dnsDomain: {{ kubernetes_dns_domain }}
  podSubnet: {{ kubernetes_pod_subnet }}
  serviceSubnet: {{ kubernetes_service_subnet }}
kubernetesVersion: {{ kubernetes_version }}
controlPlaneEndpoint: {{ kube_apiserver_advertise_address }}:{{ kube_apiserver_bind_port }}
certificatesDir: /etc/kubernetes/pki
imageRepository: {{ kubernetes_image_repository }}
apiServer:
  extraArgs:
    authorization-mode: Node,RBAC
  timeoutForControlPlane: 4m0s
controllerManager: {}
scheduler: {}
dns:
  type: CoreDNS

---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
failSwapOn: {{ kubelet_fail_swap_on | bool | lower }}
authentication:
  anonymous:
    enabled: false
  webhook:
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: Webhook
staticPodPath: {{ kubelet_static_pod_path }}
cgroupsPerQOS: {{ kubelet_cgroups_per_qos | bool | lower }}
enforceNodeAllocatable:
  {{ kubelet_enforce_node_allocatable | to_nice_yaml(indent=2) | indent(2) }}
cgroupDriver: {{ kubelet_cgroup_driver }}
kubeletCgroups: {{ kubelet_kubelet_cgroups }}
maxPods: {{ kubelet_max_pods }}
address: {{ kubelet_bind_address }}
clusterDomain: {{ kubernetes_dns_domain }}
kubeReserved:
  {{ kubelet_kube_reserved | to_nice_yaml(indent=2) | indent(2) }}
systemReserved:
  {{ kubelet_system_reserved | to_nice_yaml(indent=2) | indent(2) }}
evictionHard:
  {{ kubelet_eviction_hard | to_nice_yaml(indent=2) | indent(2) }}
resolvConf: {{ kubelet_resolv_conf }}

---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: {{ kube_proxy_bind_address }}
clusterCIDR: {{ kubernetes_pod_subnet }}
iptables:
  masqueradeAll: {{ kube_proxy_masquerade_all | bool | lower }}
  masqueradeBit: {{ kube_proxy_masquerade_bit }}
mode: {{ kube_proxy_mode }}
conntrack:
  {{ kube_proxy_conntrack | to_nice_yaml(indent=2) | indent(2) }}
