---

# Copyright 2025 Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ kube_apiserver_advertise_address }}
  bindPort: {{ kube_apiserver_bind_port }}
nodeRegistration:
  name: {{ ansible_hostname }}
  criSocket: {{ kube_kubelet_container_runtime_endpoint }}
  taints: []
  kubeletExtraArgs:
    - name: node-ip
      value: {{ kube_kubelet_node_ip }}
    - name: runtime-cgroups
      value: {{ kube_kubelet_runtime_cgroups }}
    - name: container-runtime-endpoint
      value: {{ kube_kubelet_container_runtime_endpoint }}
    - name: tls-cipher-suites
      value: "{{ kube_kubelet_tls_cipher_suites }}"

---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
clusterName: {{ kube_cluster_name }}
etcd:
  {{ kube_etcd | to_nice_yaml(2) | indent(2) }}
networking:
  dnsDomain: {{ kube_dns_domain }}
  podSubnet: {{ kube_pod_subnet }}
  serviceSubnet: {{ kube_service_subnet }}
kubernetesVersion: {{ kube_version | regex_replace('~([a-z]*)([0-9]*)', '-\\1.\\2') }}
controlPlaneEndpoint: {{ kube_apiserver_advertise_address }}:{{ kube_apiserver_bind_port }}
certificatesDir: /etc/kubernetes/pki
imageRepository: {{ kube_image_repository }}
apiServer:
  extraArgs:
    - name: authorization-mode
      value: Node,RBAC
    - name: tls-cipher-suites
      value: "{{ kube_apiserver_tls_cipher_suites }}"
controllerManager: {}
scheduler: {}
dns:
  imageRepository: {{ kube_image_repository }}/coredns

---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
failSwapOn: {{ kube_kubelet_fail_swap_on | bool | lower }}
authentication:
  anonymous:
    enabled: false
  webhook:
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: Webhook
staticPodPath: {{ kube_kubelet_static_pod_path }}
cgroupsPerQOS: {{ kube_kubelet_cgroups_per_qos | bool | lower }}
enforceNodeAllocatable:
  {{ kube_kubelet_enforce_node_allocatable | to_nice_yaml(indent=2) | indent(2) }}
cgroupDriver: {{ kube_kubelet_cgroup_driver }}
kubeletCgroups: {{ kube_kubelet_kubelet_cgroups }}
maxPods: {{ kube_kubelet_max_pods }}
address: {{ kube_kubelet_bind_address }}
clusterDomain: {{ kube_dns_domain }}
kubeReserved:
  {{ kube_kubelet_kube_reserved | to_nice_yaml(indent=2) | indent(2) }}
systemReserved:
  {{ kube_kubelet_system_reserved | to_nice_yaml(indent=2) | indent(2) }}
evictionHard:
  {{ kube_kubelet_eviction_hard | to_nice_yaml(indent=2) | indent(2) }}
resolvConf: {{ kube_kubelet_resolv_conf }}

---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: {{ kube_proxy_bind_address }}
clusterCIDR: {{ kube_pod_subnet }}
iptables:
  masqueradeAll: {{ kube_proxy_masquerade_all | bool | lower }}
  masqueradeBit: {{ kube_proxy_masquerade_bit }}
mode: {{ kube_proxy_mode }}
conntrack:
  {{ kube_proxy_conntrack | to_nice_yaml(indent=2) | indent(2) }}
