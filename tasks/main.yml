---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include release specific variables
  include_vars: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "../vars"
      skip: true
  loop_control:
    loop_var: "loop_var"
  tags: kubernetes

- name: include release specific tasks
  include_tasks: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "."
      skip: true
  loop_control:
    loop_var: "loop_var"
  tags: kubernetes

- name: docker run hello-world
  shell: |
    set -o pipefail
    docker restart hello-world || docker run -itd --name hello-world hello-world
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded

- name: kubeadm config images pull
  shell: |
    set -o pipefail
    kubeadm config images pull
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: kubernetes

- name: kubeadm init
  shell: |
    set -o pipefail
    kubeadm init \
      --apiserver-advertise-address={{ ansible_default_ipv4.address }} \
      --pod-network-cidr=10.233.64.0/18 \
      --ignore-preflight-errors=all
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: kubernetes

- name: journalctl -xeu docker
  shell: |
    set -o pipefail
    journalctl -xeu docker
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: kubernetes

- debug:
    msg: "{{ result.stdout }}"

- debug:
    msg: "{{ result.stderr }}"

- name: docker info
  shell: |
    set -o pipefail
    docker info
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: kubernetes

- debug:
    msg: "{{ result.stdout }}"

- debug:
    msg: "{{ result.stderr }}"

- name: docker image list
  shell: |
    set -o pipefail
    docker image list
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: kubernetes

- debug:
    msg: "{{ result.stdout }}"

- debug:
    msg: "{{ result.stderr }}"

- name: docker ps -a
  shell: |
    set -o pipefail
    docker ps -a
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: kubernetes

- debug:
    msg: "{{ result.stdout }}"

- debug:
    msg: "{{ result.stderr }}"

- name: journalctl -xeu kubelet
  shell: |
    set -o pipefail
    journalctl -xeu kubelet
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: kubernetes

- debug:
    msg: "{{ result.stdout }}"

- debug:
    msg: "{{ result.stderr }}"

- name: other debug
  shell: |
    set -o pipefail
    echo `hostname`
    echo `hostname -i`
    ping -c 5 `hostname -i`
    ip address
    ip route
    iptables -nvL
    iptables -nvL -t nat
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  ignore_errors: true
  tags: kubernetes

- debug:
    msg: "{{ result.stdout }}"

- debug:
    msg: "{{ result.stderr }}"

- name: copy /root/.kube/config
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    remote_src: true
  with_items:
    - { src: "/etc/kubernetes/admin.conf", dest: "/root/.kube/config", mode: "0600" }
  tags: kubernetes

- name: install pod network add-on (weave)
  shell: |
    set -o pipefail
    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  args:
    executable: "/bin/bash"
  register: result
  changed_when: result is not succeeded
  tags: kubernetes
