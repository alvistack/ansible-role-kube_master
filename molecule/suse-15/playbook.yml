---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: all
  remote_user: root
  become: true
  roles:
    - role: bootstrap
    - role: python
    - role: docker
    - role: cri_tools
    - role: kubernetes_cni
    - role: kubectl
    - role: kubelet
    - role: kubeadm

- hosts: kube_master
  remote_user: root
  become: true
  roles:
    - role: etcd
    - role: kubernetes
    - role: kubernetes_addon_manager
    - role: kubernetes_weave

- hosts: kube_node:!kube_master
  remote_user: root
  become: true
  tasks:
    - name: kubeadm token create
      environment:
        PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      shell: |
        set -o pipefail
        kubeadm token create
      args:
        executable: "/bin/bash"
      delegate_to: "{{ groups['kube_master'][0] }}"
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      ignore_errors: true

    - name: kubeadm join
      environment:
        PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      vars:
        kube_apiserver_endpoint: "{{ hostvars[groups['kube_master'][0]].ansible_eth1.ipv4.address }}:6443"
        kubelet_node_ip: "{{ ansible_eth1.ipv4.address }}"
        kubeadm_token: "{{ result.stdout }}"
      shell: |
        set -o pipefail
        cat > /etc/kubernetes/kubeadm.conf <<EOF
        apiVersion: kubeadm.k8s.io/v1beta2
        kind: JoinConfiguration
        discovery:
          bootstrapToken:
            apiServerEndpoint: {{ kube_apiserver_endpoint }}
            token: {{ kubeadm_token }}
            unsafeSkipCAVerification: true
          tlsBootstrapToken: {{ kubeadm_token }}
        nodeRegistration:
          name: {{ ansible_hostname }}
          criSocket: /var/run/dockershim.sock
          taints: []
          kubeletExtraArgs:
            node-ip: {{ kubelet_node_ip }}
            runtime-cgroups: /systemd/system.slice
        EOF
        kubeadm join \
          --config=/etc/kubernetes/kubeadm.conf \
          --ignore-preflight-errors=all
      args:
        executable: "/bin/bash"
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      ignore_errors: true
