---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: all
  become: true
  remote_user: root
  roles:
    - role: bootstrap
    - role: python
    - role: docker
    - role: etcd
    - role: cri-tools
    - role: kubernetes-cni
    - role: kubectl
      kubectl_version: "{{ kubernetes_version }}"
    - role: kubelet
      kubelet_version: "{{ kubernetes_version }}"
    - role: kubeadm
      kubeadm_version: "{{ kubernetes_version }}"

- hosts: all
  become: true
  remote_user: root
  pre_tasks:
    - name: prepare directories
      file:
        dest: "{{ item.dest }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0755') }}"
        state: "{{ item.state | default('directory') }}"
      with_items:
        - { dest: "/etc/kubernetes/pki/etcd" }

    - name: generate apiserver-etcd-client private key
      openssl_privatekey:
        path: "/etc/kubernetes/pki/apiserver-etcd-client.key"
      when: inventory_hostname == ansible_play_hosts[0]
      delegate_to: "{{ ansible_play_hosts[0] }}"

    - name: generate apiserver-etcd-client csr
      openssl_csr:
        path: "/etc/kubernetes/pki/apiserver-etcd-client.csr"
        privatekey_path: "/etc/kubernetes/pki/apiserver-etcd-client.key"
        common_name: "{{ ansible_play_hosts[0] }}"
        subject:
          CN: "{{ ansible_play_hosts[0] }}"
        subject_alt_name: >-
          {%- for host in ansible_play_hosts -%}
          DNS:{{ host }},
          {%- endfor -%}
          DNS:localhost,
          {%- for host in ansible_play_hosts -%}
          IP:{{ hostvars[host]['ansible_default_ipv4']['address'] }},
          {%- endfor -%}
          IP:127.0.0.1
        key_usage:
          - digitalSignature
          - keyEncipherment
          - nonRepudiation
        extended_key_usage:
          - clientAuth
          - serverAuth
        basic_constraints: "CA:FALSE"
      when: inventory_hostname == ansible_play_hosts[0]
      delegate_to: "{{ ansible_play_hosts[0] }}"

    - name: generate apiserver-etcd-client ownca certificate
      openssl_certificate:
        path: "/etc/kubernetes/pki/apiserver-etcd-client.crt"
        csr_path: "/etc/kubernetes/pki/apiserver-etcd-client.csr"
        privatekey_path: "/etc/kubernetes/pki/apiserver-etcd-client.key"
        ownca_path: "/etc/etcd/pki/ca.crt"
        ownca_privatekey_path: "/etc/etcd/pki/ca.key"
        provider: "ownca"
      when: inventory_hostname == ansible_play_hosts[0]
      delegate_to: "{{ ansible_play_hosts[0] }}"

    - name: copy etcd ca cert
      copy:
        src: "/etc/etcd/pki/ca.crt"
        dest: "/etc/kubernetes/pki/etcd/ca.crt"
        remote_src: true
      when: inventory_hostname == ansible_play_hosts[0]
      delegate_to: "{{ ansible_play_hosts[0] }}"

  roles:
    - role: kubernetes

  post_tasks:
    - name: install pod network add-on (flannel)
      shell: |
        set -o pipefail
        curl -skL https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml > /tmp/kube-flannel.yml
        sed -i 's/{{ "10.244.0.0/16" | regex_escape() }}/{{ pod_subnet | regex_escape() }}/g' /tmp/kube-flannel.yml
        kubectl apply -f /tmp/kube-flannel.yml
      args:
        executable: "/bin/bash"
      when: inventory_hostname == ansible_play_hosts[0]
      register: result
      until: result is succeeded
      changed_when: result is not succeeded

    - name: kubectl version
      command: kubectl version
      register: result
      changed_when: result is not succeeded
