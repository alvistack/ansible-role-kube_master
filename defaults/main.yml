---

# Copyright 2024 Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Path to the client server TLS trusted CA key file.
etcd_trusted_ca_file: "/etc/etcd/pki/ca.crt"

# Kubernetes release.
kube_release: "{{ _kube_release }}"

# Kubernetes version.
kube_version: "{{ _kube_version[kube_release] }}"

# Kubernetes cluster name.
kube_cluster_name: "{{ hostvars[groups['kube_master'][0]].ansible_machine_id | to_uuid }}"

# Etcd contains elements describing Etcd configuration.
kube_etcd:
  external:
    endpoints: >-
      {%- set _ns = namespace() -%}
      {%- set _ns._params = [] -%}
      {%- for host in groups['etcd'] -%}
      {%-   set _ns._params = _ns._params + ["https://" + hostvars[host].ansible_default_ipv4.address + ":2379"] -%}
      {%- endfor -%}
      {{ _ns._params }}
    caFile: "/etc/kubernetes/pki/etcd/ca.crt"
    certFile: "/etc/kubernetes/pki/apiserver-etcd-client.crt"
    keyFile: "/etc/kubernetes/pki/apiserver-etcd-client.key"

# DNSDomain is the dns domain used by k8s services. Defaults to
# "cluster.local".
kube_dns_domain: "cluster.local"

# ServiceSubnet is the subnet used by k8s services. Defaults to
# "10.96.0.0/12".
kube_service_subnet: "10.233.0.0/18"

# PodSubnet is the subnet used by pods.
kube_pod_subnet: "10.233.64.0/18"

# ImageRepository sets the container registry to pull images from.
kube_image_repository: "registry.k8s.io"

# Token is a token used to validate cluster information fetched from the
# control-plane.
kube_kubeadm_token: ~

# IP address of the node. If set, kubelet will use this IP address for the
# node.
kube_kubelet_node_ip: "{{ ansible_default_ipv4.address }}"

# address is the IP address for the Kubelet to serve on (set to 0.0.0.0
# for all interfaces).
kube_kubelet_bind_address: "0.0.0.0"

# failSwapOn tells the Kubelet to fail to start if swap is enabled on the
# node.
kube_kubelet_fail_swap_on: false

# Enable QoS based Cgroup hierarchy.
kube_kubelet_cgroups_per_qos: true

# This flag specifies the various Node Allocatable enforcements that Kubelet
# needs to perform.
kube_kubelet_enforce_node_allocatable:
  - "pods"

# Driver that the kubelet uses to manipulate cgroups on the host (cgroupfs or
# systemd).
kube_kubelet_cgroup_driver: "{{ _kube_kubelet_cgroup_driver }}"

# Optional absolute name of cgroups to create and run the runtime in.
kube_kubelet_runtime_cgroups: "{{ _kube_kubelet_runtime_cgroups }}"

# Optional absolute name of cgroups to create and run the Kubelet in.
kube_kubelet_kubelet_cgroups: "{{ kube_kubelet_runtime_cgroups }}"

# The endpoint of remote runtime service.
kube_kubelet_container_runtime_endpoint: "unix:///var/run/crio/crio.sock"

# Comma-separated list of cipher suites for the server.
kube_kubelet_tls_cipher_suites: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"

# maxPods is the number of pods that can run on this Kubelet.
kube_kubelet_max_pods: "110"

# A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs
# that describe resources reserved for kubernetes system components.
kube_kubelet_kube_reserved:
  cpu: "200m"
  memory: "512Mi"

# systemReserved is a set of ResourceName=ResourceQuantity (e.g.
# cpu=200m,memory=150G) pairs that describe resources reserved for
# non-kubernetes components.
kube_kubelet_system_reserved:
  cpu: "200m"
  memory: "4096Mi"

# Map of signal names to quantities that defines hard eviction thresholds. For
# example: {"memory.available": "300Mi"}.
kube_kubelet_eviction_hard:
  memory.available: "128Mi"
  nodefs.available: "5%"

# staticPodPath is the path to the directory containing local (static) pods to
# run, or the path to a single static pod file.
kube_kubelet_static_pod_path: "/etc/kubernetes/manifests"

# ResolverConfig is the resolver configuration file used as the basis
# for the container DNS resolution configuration.
kube_kubelet_resolv_conf: "{{ _kube_kubelet_resolv_conf }}"

# AdvertiseAddress sets the IP address for the API server to advertise.
kube_apiserver_advertise_address: "{{ ansible_default_ipv4.address }}"

# BindPort sets the secure port for the API Server to bind to.
kube_apiserver_bind_port: "6443"

# APIServerEndpoint is an IP or domain name to the API server from which info
# will be fetched.
kube_apiserver_endpoint: "{{ hostvars[groups['kube_master'][0]].ansible_default_ipv4.address }}:{{ kube_apiserver_bind_port }}"

# commonName field of the CSR.
kube_apiserver_csr_common_name: "{{ groups['kube_master'][0] }}"

# subjectAltName field of the CSR.
kube_apiserver_csr_subject_alt_name: >-
  {%- set _ns = namespace() -%}
  {%- set _ns._params = ["DNS:localhost", "IP:127.0.0.1"] -%}
  {%- for host in groups['kube_master'] -%}
  {%-   set _ns._params = _ns._params + ["DNS:" + host, "IP:" + hostvars[host].ansible_default_ipv4.address] -%}
  {%- endfor -%}
  {{ _ns._params }}

# Comma-separated list of cipher suites for the server.
kube_apiserver_tls_cipher_suites: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"

# bindAddress is the IP address for the proxy server to serve on (set to
# 0.0.0.0 for all interfaces).
kube_proxy_bind_address: "0.0.0.0"

# masqueradeAll tells kube-proxy to SNAT everything if using the pure iptables
# proxy mode.
kube_proxy_masquerade_all: false

# masqueradeBit is the bit of the iptables fwmark space to use for SNAT if
# using the pure iptables proxy mode. Values must be within the range [0, 31].
kube_proxy_masquerade_bit: "14"

# mode specifies which proxy mode to use.
kube_proxy_mode: "iptables"

# conntrack contains conntrack-related configuration options.
kube_proxy_conntrack:
  maxPerCore: 32768
  min: 131072
