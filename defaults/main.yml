---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Kubernetes version.
kubernetes_version: "v1.17.0"

# Kubernetes cluster name.
kubernetes_cluster_name: "{{ hostvars[ansible_play_hosts[0]].ansible_machine_id | to_uuid }}"

# Endpoints of etcd members. Required for ExternalEtcd.
kubernetes_etcd_external_endpoints: >-
  {%- for host in ansible_play_hosts -%}
  https://{{ hostvars[host].ansible_default_ipv4.address }}:2379,
  {%- endfor -%}

# DNSDomain is the dns domain used by k8s services. Defaults to "cluster.local".
kubernetes_dns_domain: "cluster.local"

# ServiceSubnet is the subnet used by k8s services. Defaults to "10.96.0.0/12".
kubernetes_service_subnet: "10.233.0.0/18"

# PodSubnet is the subnet used by pods.
kubernetes_pod_subnet: "10.233.64.0/18"

# ImageRepository sets the container registry to pull images from.
kubernetes_image_repository: "k8s.gcr.io"

# IP address of the node. If set, kubelet will use this IP address for the node.
kubelet_node_ip: "{{ ansible_default_ipv4.address }}"

# address is the IP address for the Kubelet to serve on (set to 0.0.0.0
# for all interfaces).
kubelet_bind_address: "0.0.0.0"

# failSwapOn tells the Kubelet to fail to start if swap is enabled on the node.
kubelet_fail_swap_on: false

# Enable QoS based Cgroup hierarchy
kubelet_cgroups_per_qos: true

# driver that the kubelet uses to manipulate cgroups on the host (cgroupfs or systemd)
kubelet_cgroup_driver: "systemd"

# Optional absolute name of cgroups to create and run the runtime in.
kubelet_runtime_cgroups: "/systemd/system.slice"

# Optional absolute name of cgroups to create and run the Kubelet in.
kubelet_kubelet_cgroups: "/systemd/system.slice"

# maxPods is the number of pods that can run on this Kubelet.
kubelet_max_pods: "110"

# A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs
# that describe resources reserved for kubernetes system components.
kubelet_kube_reserved:
  cpu: "200m"
  memory: "512Mi"

# systemReserved is a set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G)
# pairs that describe resources reserved for non-kubernetes components.
kubelet_system_reserved:
  cpu: "200m"
  memory: "512Mi"

# Map of signal names to quantities that defines hard eviction thresholds. For
# example: {"memory.available": "300Mi"}.
kubelet_eviction_hard:
  memory.available: "128Mi"
  nodefs.available: "5%"

# staticPodPath is the path to the directory containing local (static) pods to
# run, or the path to a single static pod file.
kubelet_static_pod_path: "/etc/kubernetes/manifests"

# ResolverConfig is the resolver configuration file used as the basis
# for the container DNS resolution configuration.
kubelet_resolv_conf: "/etc/resolv.conf"

# AdvertiseAddress sets the IP address for the API server to advertise.
kube_apiserver_advertise_address: "{{ ansible_default_ipv4.address }}"

# BindPort sets the secure port for the API Server to bind to.
kube_apiserver_bind_port: "6443"

# APIServerEndpoint is an IP or domain name to the API server from which info
# will be fetched.
kube_apiserver_endpoint: "{{ hostvars[groups['kube-master'][0]].ansible_default_ipv4.address }}:{{ kube_apiserver_bind_port }}"

# commonName field of the CSR.
kube_apiserver_csr_common_name: "{{ ansible_play_hosts[0] }}"

# subjectAltName field of the CSR.
kube_apiserver_csr_subject_alt_name: >-
  {%- for host in ansible_play_hosts -%}
  DNS:{{ host }},
  {%- endfor -%}
  DNS:localhost,
  {%- for host in ansible_play_hosts -%}
  IP:{{ hostvars[host].ansible_default_ipv4.address }},
  {%- endfor -%}
  IP:127.0.0.1

# bindAddress is the IP address for the proxy server to serve on (set to 0.0.0.0
# for all interfaces).
kube_proxy_bind_address: "0.0.0.0"

# masqueradeAll tells kube-proxy to SNAT everything if using the pure iptables proxy mode.
kube_proxy_masquerade_all: false

# masqueradeBit is the bit of the iptables fwmark space to use for SNAT if using
# the pure iptables proxy mode. Values must be within the range [0, 31].
kube_proxy_masquerade_bit: "14"

# mode specifies which proxy mode to use.
kube_proxy_mode: "iptables"

# conntrack contains conntrack-related configuration options.
kube_proxy_conntrack:
  maxPerCore: 32768
  min: 131072
